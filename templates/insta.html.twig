{% extends "base.html.twig" %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .insta-grid {
            display: grid;
            grid-template-columns: 320px 1fr;
            gap: 1rem;
        }

        .facet-header {
            display: flex;
            align-items: baseline;
            gap: .75rem;
        }

        .facet-title {
            text-transform: none;
            font-weight: 600;
        }

        .facet-sort {
            margin-left: auto;
        }
    </style>
{% endblock %}

{% block body %}
    {% set _sc = '@survos/meili-bundle/insta' %}
    {% set _sc_modal = '@survos/meili-bundle/json' %}

    {% set globals = {
        serverUrl: server,
        serverApiKey: apiKey,
        indexName: indexName,
        _sc_modal: _sc_modal,
        debug: app.request.get('debug', false) ? true : false
    } %}

    {% set icons = {
        json: ux_icon('si:json-duotone'),
        bug: ux_icon('tabler:bug'),
        wikidata: ux_icon('openmoji:wikidata'),
        website: ux_icon('fluent-mdl2:website'),
        facebook: ux_icon('mdi:facebook'),
    } %}

    {% set templateUrl = path('meili_template', { templateName: templateName }) %}

    <div
            {{ stimulus_controller(_sc, {
                serverUrl: server,
                serverApiKey: apiKey,
                indexName: indexName,
                embedderName: embedder,
                hitClass: app.request.get('class', 'grid-' ~ app.request.get('grid')|default(2)),
                sortingJson: sorting|default([])|json_encode,
                globalsJson: globals|json_encode,
                iconsJson: icons|json_encode,
                configJson: indexConfig|json_encode,
                templateUrl: templateUrl
            }) }}
            class="container-fluid py-4"
    >
        <div
                {{ stimulus_controller(_sc_modal, {
                    serverUrl: server,
                    serverApiKey: apiKey,
                    indexName: indexName,
                    globalsJson: globals|json_encode
                }) }}
        >
            {{ include('@SurvosMeili/components/_modal.html.twig', { _sc_modal: _sc_modal }) }}

            <div class="insta-grid">
                <aside {{ stimulus_target(_sc, 'refinementList') }}>

                    {# Render each facet as: header row (title + sort select) + mount div #}
                    {% for name, conf in indexConfig.facets %}
                        <div class="facet-block mb-5" data-facet-block>
                            <div class="facet-header">
                                <h3 class="facet-title h6 m-0">{{ conf.label ?? name }}</h3>

                                {% set widget = conf.widget ?? conf.type ?? 'RefinementList' %}
                                {% if widget in ['RefinementList','Menu'] %}
                                    {% set initialSort = conf.sortMode|default('count') %}
                                    <span class="facet-actions" data-attribute="{{ name }}">
      <button type="button"
              class="btn btn-ghost btn-icon btn-xxs facet-sort-toggle"
              title="Toggle sort (count â‡† name)"
              data-sort-toggle
              data-attribute="{{ name }}"
              data-mode="{{ initialSort }}"
              aria-pressed="{{ initialSort == 'name' ? 'true' : 'false' }}">
        {# show an icon hint; letters-case when name, numbers when count #}
          {{ initialSort in ['name','alpha'] ? ux_icon('tabler:letters-case')|raw : ux_icon('tabler:numbers')|raw }}
      </button>

      <button class="facet-collapse btn btn-ghost btn-xxs p-0"
              type="button"
              data-collapse-control
              data-attribute="{{ name }}"
              aria-expanded="{{ (conf.collapsed is same as(true)) ? 'false' : 'true' }}"
              title="Collapse/Expand">
        {{ ux_icon('tabler:chevron-down')|raw }}
      </button>
    </span>
                                {% else %}
                                    <span class="facet-actions">
      <button class="facet-collapse btn btn-ghost btn-xxs p-0"
              type="button"
              data-collapse-control
              data-attribute="{{ name }}"
              aria-expanded="{{ (conf.collapsed is same as(true)) ? 'false' : 'true' }}"
              title="Collapse/Expand">
        {{ ux_icon('tabler:chevron-down')|raw }}
      </button>
    </span>
                                {% endif %}
                            </div>

                            <div class="facet-body mt-2">
                                <div
                                        data-attribute="{{ name }}"
                                        data-widget="{{ conf.widget ?? conf.type ?? 'RefinementList' }}"
                                        {% if conf.sortMode is defined %} data-sort-mode="{{ conf.sortMode }}"{% endif %}
                                        {% if conf.searchable is same as(true) %} data-searchable="true"{% elseif conf.searchable is same as(false) %} data-searchable="false"{% endif %}
                                        {% if conf.limit is defined %} data-limit="{{ conf.limit }}"{% endif %}
                                        {% if conf.showMoreLimit is defined %} data-show-more-limit="{{ conf.showMoreLimit }}"{% endif %}
                                        {% if conf.lookup is defined and conf.lookup is iterable %} data-lookup='{{ conf.lookup|json_encode }}'{% endif %}

                                        {# Range options (used when widget is RangeSlider) #}
                                        {% if widget == 'RangeSlider' %}
                                            {% if conf.step is defined %} data-step="{{ conf.step }}"{% endif %}
                                            {% if conf.min is defined %} data-min="{{ conf.min }}"{% endif %}
                                            {% if conf.max is defined %} data-max="{{ conf.max }}"{% endif %}
                                            {% if conf.pips is defined %} data-pips="{{ conf.pips ? 'true' : 'false' }}"{% endif %}
                                            {% if conf.tooltips is defined %} data-tooltips='{{ conf.tooltips|json_encode }}'{% endif %}
                                        {% endif %}
                                ></div>
                            </div>
                        </div>
                    {% endfor %}
                </aside>

                <main>

                    {% if embedder|default(false) %}
                        <div class="semantic-toolbar d-flex align-items-center gap-2 mb-3">
                            <span class="badge text-bg-secondary">{{ embedder }}</span>
                            <label class="small text-muted" for="semantic-range">Semantic</label>
                            {% set initialSemantic = (app.request.get('semantic') ?? 30) %}
                            <input
                                    {{ stimulus_action(_sc, 'semantic', 'change') }}
                                    type="range"
                                    min="0" max="100" step="1"
                                    value="{{ initialSemantic }}"
                                    style="width: 180px;"
                            >
                            <output {{ stimulus_target(_sc, 'semanticOutput') }} class="small text-muted">{{ initialSemantic }}%</output>

                            {# Sort-by sits right here #}
                            <div class="ms-3" {{ stimulus_target(_sc, 'sortBy') }}></div>
                        </div>
                    {% endif %}

                    <div class="mb-3 d-flex gap-2 align-items-center">
                        <div class="flex-grow-1" {{ stimulus_target(_sc, 'searchBox') }}></div>
                        <div {{ stimulus_target(_sc, 'reset') }}></div>
                    </div>
                    <div class="mb-2 small text-muted" {{ stimulus_target(_sc, 'stats') }}></div>
                    <div class="mt-4" {{ stimulus_target(_sc, 'sort') }}></div>

                    <div {{ stimulus_target(_sc, 'hits') }}></div>
                    <div class="mt-4" {{ stimulus_target(_sc, 'pagination') }}></div>
                </main>
            </div>
        </div>
    </div>
{% endblock %}
